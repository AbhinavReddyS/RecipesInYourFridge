{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.service.ts","./src/app/speech-to-text/speech-to-text.component.ts","./src/app/speech-to-text/speech-to-text.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/service/voice-recognition.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class AppService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    SERVICE_API = 'http://127.0.0.1:5000/';\r\n    public ingredientSearch(data: any) : any{\r\n      return this.http.post(this.SERVICE_API + 'ISearch', data);\r\n    }\r\n\r\n    public titleSearch(data: any) : any{\r\n      return this.http.post(this.SERVICE_API + 'TSearch', data);\r\n    }\r\n\r\n    public fetchIngredients() : any{\r\n      return this.http.get(this.SERVICE_API + 'getIngredients');\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { VoiceRecognitionService } from '../service/voice-recognition.service'\n\n@Component({\n  selector: 'app-speech-to-text',\n  templateUrl: './speech-to-text.component.html',\n  styleUrls: ['./speech-to-text.component.css'],\n  providers: [VoiceRecognitionService]\n})\nexport class SpeechToTextComponent implements OnInit {\n\n\n  constructor(\n    public service : VoiceRecognitionService\n  ) {\n    this.service.init()\n   }\n\n  ngOnInit(): void {\n  }\n\n  startService(){\n    this.service.start()\n  }\n\n  stopService(){\n    this.service.stop()\n  }\n\n}\n","<p>speech-to-text works!</p>\n","import { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  ing_query: string = '';\r\n  ingQueryResponse: any;\r\n  title_query: string = '';\r\n  titleQueryResponse: any;\r\n\r\n  constructor(private appService: AppService){\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  public ingredientSearch(){\r\n    this.appService.ingredientSearch(this.ing_query).subscribe((response: any) => {\r\n      this.ingQueryResponse = response;\r\n    });\r\n  }\r\n\r\n  public titleSearch(){\r\n    this.appService.titleSearch(this.title_query).subscribe((response: any) => {\r\n      this.titleQueryResponse = response;\r\n    });\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { SpeechToTextComponent } from './speech-to-text/speech-to-text.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    SpeechToTextComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent,SearchComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../app.service';\r\nimport { VoiceRecognitionService } from '../service/voice-recognition.service'\r\n\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n    providers: [VoiceRecognitionService]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  ing_query: string = '';\r\n  lstRecipes: any;\r\n  ingredients:any;\r\n  constructor(private appService: AppService, public service : VoiceRecognitionService){\r\n   this.service.init()\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public ingredientSearch(){\r\n    this.appService.ingredientSearch(this.ing_query).subscribe((response: any) => {\r\n      this.lstRecipes = response;\r\n    });\r\n  }\r\n\r\n  public fetchIngredients(){\r\n    this.appService.fetchIngredients().subscribe((response: any) => {\r\n      this.ingredients = response;\r\n      console.log(this.ingredients)\r\n    });\r\n  }\r\n\r\n  public toggle(){\r\n\r\n  }\r\n\r\n  public redirect(url:any){\r\n        window.open(url, \"_blank\");\r\n  }\r\n\r\n    startService(){\r\n    this.service.start()\r\n  }\r\n\r\n  stopService(){\r\n    this.service.stop()\r\n  }\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n    {text: 'recipe', cols: 1, rows: 1, color: '#F3F3F3'},\r\n\r\n  ];\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>search</title>\r\n</head>\r\n\r\n<body>\r\n    <div id=\"header\">\r\n        <div id=\"topbar\">\r\n            <img id=\"searchbarimage\" src=\"assets/images/RIYF.png\" />\r\n            <div id=\"searchbar\" type=\"text\">\r\n <input id=\"searchbartext\" type=\"text\" name=\"ingredientSearchText\" type=\"text\" placeholder=\"Search...\"\r\n                    [(ngModel)]=\"ing_query\" value = {{service.text}}  #reference/>\r\n              <button class= \"cancel\" (click)=\"reference.value=''\">\r\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\r\n              <div class= \"vertical\"></div>\r\n              <button class= \"mic\" (click)=\"startService()\">\r\n              <i class=\"fa fa-microphone\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              <button class= \"search\" (click)=\"ingredientSearch(); stopService()\" type=\"submit\">\r\n              <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n                    <div class=\"toggle\">\r\n          <mat-slide-toggle (click)=\"toggle()\"></mat-slide-toggle>\r\n            </div>\r\n                      <p>Ingredient Search</p>\r\n        </div>\r\n        <div id=\"results\">\r\n            <mat-grid-list cols=\"4\" rowHeight=\"200px\" gutterSize=50px>\r\n                <mat-grid-tile *ngFor=\"let recipe of lstRecipes\" [colspan]=\"1\" [rowspan]=\"1\"\r\n                    [style.backgroundImage]=\"'url('+ recipe.photo_url +')'\" (click)=\"redirect(recipe.recipe_url)\"\r\n                    class=\"tile\">\r\n                    <div class=\"tile_content\">\r\n                        <img src=\"{{recipe.photo_url}}\" alt=\"Avatar\" class=\"image\">\r\n                        <div class=\"overlay\">{{recipe.title}}</div>\r\n                      </div>\r\n                </mat-grid-tile>\r\n            </mat-grid-list>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</body>\r\n\r\n</html>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\n\r\nconst routes: Routes = [\r\n{ path: '', redirectTo: '/search', pathMatch: 'full' },\r\n  { path: 'search', component: SearchComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\n\n\ndeclare var webkitSpeechRecognition: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoiceRecognitionService {\n\n recognition =  new webkitSpeechRecognition();\n  isStoppedSpeechRecog = false;\n  public text = '';\n  tempWords;\n\n  constructor() { }\n\n  init() {\n\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n\n    this.recognition.addEventListener('result', (e) => {\n      const transcript = Array.from(e.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join('');\n      this.tempWords = transcript;\n      console.log(transcript);\n    });\n  }\n\n  start() {\n    this.isStoppedSpeechRecog = false;\n    this.recognition.start();\n    console.log(\"Speech recognition started\")\n    this.recognition.addEventListener('end', (condition) => {\n      if (this.isStoppedSpeechRecog) {\n        this.recognition.stop();\n        console.log(\"End speech recognition\")\n      } else {\n        this.wordConcat()\n        this.recognition.start();\n      }\n    });\n  }\n  stop() {\n    this.isStoppedSpeechRecog = true;\n    this.wordConcat()\n    this.recognition.stop();\n    console.log(\"End speech recognition\")\n  }\n\n  wordConcat() {\n    this.text = this.text + ' ' + this.tempWords + '.';\n    this.tempWords = '';\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}