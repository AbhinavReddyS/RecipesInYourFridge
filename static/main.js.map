{"version":3,"sources":["./src/environments/environment.ts","./src/app/search/search.filter.ts","./src/app/app.service.ts","./src/app/speech-to-text/speech-to-text.component.ts","./src/app/speech-to-text/speech-to-text.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/service/voice-recognition.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACT5D,MAAM,YAAY;IACrB,SAAS,CAAC,KAAY,EAAE,MAAc;QAClC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;YACnB,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC;IAC7D,CAAC;;wEANQ,YAAY;8GAAZ,YAAY;;;;;;;;;;;;;;;;;;;ACGhB,MAAM,UAAU;IAErB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGpC,gBAAW,GAAG,wBAAwB,CAAC;IAFvC,CAAC;IAGM,gBAAgB,CAAC,IAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,CAAC;IAC5D,CAAC;;oEAhBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACNtB;AAAA;AAAA;AAAA;AAA8E;;;AAQvE,MAAM,qBAAqB;IAGhC,YACS,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAExC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;IACpB,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;IACtB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;IACrB,CAAC;;0FAlBU,qBAAqB;qGAArB,qBAAqB,mHAFrB,CAAC,0FAAuB,CAAC;QCPtC,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACSrB,MAAM,YAAY;IAMvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAL1C,cAAS,GAAW,EAAE,CAAC;QAEvB,gBAAW,GAAW,EAAE,CAAC;IAKzB,CAAC;IAED,QAAQ;IACR,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3E,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxE,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;;wEAvBU,YAAY;4FAAZ,YAAY;QCTzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACA;AACS;AAClB;AACa;AACE;AACL;AACyB;AACd;AACb;AACc;AACL;AACT;AACF;AACE;AACH;AACyB;;AA6BtE,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY,EAAC,wEAAe;6IAE7B,SAAS,mBAHT,EAAE,YAhBJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,6EAAiB;YACjB,mFAAoB;YACpB,uEAAc;YACd,qFAAqB;YACrB,gFAAkB;YAClB,kEAAmB;YACnB,6FAAuB;YACvB,uEAAc,EAAC,uEAAe,EAAE,wEAAe,EAAE,qEAAa;SAG/D;oIAIU,SAAS,mBAxBlB,2DAAY;QACZ,wEAAe;QACf,8FAAqB;QACrB,mEAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,6EAAiB;QACjB,mFAAoB;QACpB,uEAAc;QACd,qFAAqB;QACrB,gFAAkB;QAClB,kEAAmB;QACnB,6FAAuB;QACvB,uEAAc,EAAC,uEAAe,EAAE,wEAAe,EAAE,qEAAa;;;;;;;;;;;;;ACtClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8E;AAC3B;AACR;AAIG;;;;;;;;;;;;;;;;ICKxC,0EAAoD;IAClD,gFACkE;IAAhE,iVAAyB;IAD3B,4DACkE;IAClE,6EAAoD;IAA7B,qSAAyB,EAAE,IAAC;IACjD,mEAA8C;IAAA,4DAAS;IACzD,qEAA4B;IAC5B,6EAA6C;IAAzB,sTAAwB;IAC1C,mEAAmD;IACrD,4DAAS;IACT,6EAA4E;IAArD,8UAAsC;IAC3D,mEAA+C;IACjD,4DAAS;IACX,4DAAM;;;IAVwB,0DAAwB;IAAxB,iGAAwB;IAAlD,uFAAyB;;;;IAgD7B,0EAAmD;IACjD,gFACgE;IAA9D,kVAAuB;IADzB,4DACgE;IAChE,6EAAoD;IAA7B,wSAAyB,EAAE,IAAC;IACjD,mEAA8C;IAAA,4DAAS;IACzD,qEAA4B;IAC5B,6EAAmE;IAA5C,6TAA6B;IAClD,mEAA+C;IACjD,4DAAS;IACX,4DAAM;;;IAPsB,0DAAwB;IAAxB,iGAAwB;IAAhD,qFAAuB;;;;IAa3B,sEAAoC;IAClC,qFAAoC;IACjC,iFAAuG;IAApE,iVAAiC;IACnE,iFAAwB;IAAA,uEAAY;IAAA,4DAAa;IACjD,iFAAwB;IAAA,kEAAO;IAAA,4DAAa;IAC5C,iFAAwB;IAAA,kEAAO;IAAA,4DAAa;IAC5C,iFAAwB;IAAA,mEAAO;IAAA,4DAAa;IAC7C,4DAAa;IAChB,4DAAiB;IACpB,4DAAM;;;IAPqE,0DAAiC;IAAjC,+FAAiC;;;IAY3G,0EAA0F;IACxF,2EAAsB;IAAA,qEAAU;IAAA,4DAAO;IACzC,4DAAM;;;IAWI,uEAAkC;IAAA,mEAA6B;IAAA,uDAAwB;IAAA,4EAAgC;IAAA,4DAAC;IAAA,4DAAQ;IAAA,4DAAO;;;IAAxE,0DAAwB;IAAxB,kGAAwB;;;IACvF,uEAAkC;IAAA,mEAA4B;IAAA,uDAAuB;IAAA,4DAAO;;;IAA9B,0DAAuB;IAAvB,wFAAuB;;;IACrF,uEAA6B;IAAA,mEAA+B;IAAA,uDAA+B;;IAAA,4DAAO;;;IAAtC,0DAA+B;IAA/B,oJAA+B;;;IAC3F,uEAAsC;IAAA,mEAA2B;IAAA,uDAAwC;;IAAA,4DAAO;;;IAA/C,0DAAwC;IAAxC,6JAAwC;;;;IAZjH,oFAC6G;IAAnD,8XAAqC;IAC7F,0EAA0B;IACxB,qEAA2D;IAC3D,0EAAqB;IACnB,uEAAM;IACJ,uDACF;IAAA,4DAAO;IACP,0EAA2B;IACzB,8HAAuI;IACvI,8HAA4F;IAC5F,8HAAkG;IAClG,gIAAgH;IAClH,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAgB;;;IAfd,kHAAuD;IADiB,sEAAa;IAG9E,0DAA0B;IAA1B,6JAA0B;IAG3B,0DACF;IADE,4FACF;IAES,0DAAyB;IAAzB,yFAAyB;IACzB,0DAAyB;IAAzB,yFAAyB;IACzB,0DAAoB;IAApB,oFAAoB;IACpB,0DAA6B;IAA7B,6FAA6B;;ADlF7C,MAAM,eAAe;IAyB1B,YAAoB,UAAsB,EAAS,OAAiC;QAAhE,eAAU,GAAV,UAAU,CAAY;QAAS,YAAO,GAAP,OAAO,CAA0B;QAvBpF,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAY,KAAK,CAAC;QAC5B,mBAAc,GAAY,KAAK,CAAC;QAIhC,aAAQ,GAAW,IAAI,CAAC;QAExB,YAAO,GAAG,IAAI,CAAC;QACf,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,uBAAkB,GAAa,CAAC,2DAAK,EAAE,2DAAK,CAAC,CAAC;QAC9C,YAAO,GAAG,IAAI,0DAAW,EAAE,CAAC;QAE5B,gBAAW,GAAa,EAAE,CAAC;QAC3B,mBAAc,GAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAC,QAAQ,CAAC,CAAC;QAOpF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACnB,IAAI,CAAC,gBAAgB,EAAE;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAC9C,gEAAS,CAAC,IAAI,CAAC,EACf,0DAAG,CAAC,CAAC,UAAyB,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9G,CAAC;IACF,QAAQ;IACR,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC3E,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE;YACxB,OAAO;QACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gBAAgB;QACrB,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YAC7D,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,IAAI,CAAC,UAAU,IAAG,KAAK,EAAC;YAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;SACpB;IAAA,CAAC;IAEC,QAAQ,CAAC,GAAO;QACjB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;IACH,CAAC;IAIH,8BAA8B;IAC5B,GAAG,CAAC,KAAwB;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAE1B,qBAAqB;QACrB,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SACrC;QAED,wBAAwB;QACxB,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEH,iCAAiC;IAC/B,MAAM,CAAC,UAAkB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACnC;IACH,CAAC;IAEH,uCAAuC;IACrC,QAAQ,CAAC,KAAmC;QAC1C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEH,0BAA0B;IAChB,OAAO,CAAC,KAAa;QAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACvG,CAAC;;8EApIU,eAAe;+FAAf,eAAe;;;;;;;qFAFb,CAAC,0FAAuB,CAAC;QCvBxC,uEAAM;QAEN,uEAAM;QACJ,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QACvB,4DAAO;QAEP,uEAAM;QACJ,yEAAiB;QACf,yEAAiB;QACf,oEAAwD;QAGxD,4GAYM;QAsCN,2GASM;QAEN,0EAAoB;QAClB,uFAAqC;QAAnB,kJAAS,YAAQ,IAAC;QAAC,4DAAmB;QAC1D,4DAAM;QACN,wEAA8C;QAAA,6EAAiB;QAAA,4DAAI;QACnE,8GASK;QACP,4DAAM;QAGN,0EAAkB;QAChB,6GAEM;QACN,qFAA0D;QACxD,oIAgBgB;;QAClB,4DAAgB;QAClB,4DAAM;QAER,4DAAM;QAER,4DAAO;QAEP,4DAAO;;QA3GgC,0DAAiB;QAAjB,iFAAiB;QAkDjB,0DAAgB;QAAhB,gFAAgB;QAe3C,0DAA4B;QAA5B,6HAA4B;QAckC,0DAAoB;QAApB,oFAAoB;QAIpD,0DAAsC;QAAtC,mKAAsC;;;;;;;;;;;;;;AC/FhF;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEK;;;AAG5D,MAAM,MAAM,GAAW;IACvB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CAAC,CAAC;AAM3C,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;ACJjB,MAAM,uBAAuB;IAOlC;QALD,gBAAW,GAAI,IAAI,uBAAuB,EAAE,CAAC;QAC5C,yBAAoB,GAAG,KAAK,CAAC;QACtB,SAAI,GAAG,EAAE,CAAC;IAGD,CAAC;IAEjB,IAAI;QAEF,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC;QAEhC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;YAChD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;iBACrC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC1B,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;iBAClC,IAAI,CAAC,EAAE,CAAC,CAAC;YACZ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,EAAE;YACrD,IAAI,IAAI,CAAC,oBAAoB,EAAE;gBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI;QACF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;;8FAhDU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;ACN2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'recipeFilter',\r\n    pure: false\r\n})\r\nexport class SearchFilter implements PipeTransform {\r\n    transform(items: any[], filter: Object): any {\r\n        if (!items || !filter) {\r\n            return items;\r\n        }\r\n        return items.filter(item => item.cooking_time <= filter);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class AppService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    SERVICE_API = 'http://127.0.0.1:5000/';\r\n    public ingredientSearch(data: any) : any{\r\n      return this.http.post(this.SERVICE_API + 'ISearch', data);\r\n    }\r\n\r\n    public titleSearch(data: any) : any{\r\n      return this.http.post(this.SERVICE_API + 'TSearch', data);\r\n    }\r\n\r\n    public fetchIngredients() : any{\r\n      return this.http.get(this.SERVICE_API + 'getIngredients');\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { VoiceRecognitionService } from '../service/voice-recognition.service'\n\n@Component({\n  selector: 'app-speech-to-text',\n  templateUrl: './speech-to-text.component.html',\n  styleUrls: ['./speech-to-text.component.css'],\n  providers: [VoiceRecognitionService]\n})\nexport class SpeechToTextComponent implements OnInit {\n\n\n  constructor(\n    public service : VoiceRecognitionService\n  ) {\n    this.service.init()\n   }\n\n  ngOnInit(): void {\n  }\n\n  startService(){\n    this.service.start()\n  }\n\n  stopService(){\n    this.service.stop()\n  }\n\n}\n","<p>speech-to-text works!</p>\n","import { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AppService } from './app.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  ing_query: string = '';\r\n  ingQueryResponse: any;\r\n  title_query: string = '';\r\n  titleQueryResponse: any;\r\n\r\n  constructor(private appService: AppService){\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  public ingredientSearch(){\r\n    this.appService.ingredientSearch(this.ing_query).subscribe((response: any) => {\r\n      this.ingQueryResponse = response;\r\n    });\r\n  }\r\n\r\n  public titleSearch(){\r\n    this.appService.titleSearch(this.title_query).subscribe((response: any) => {\r\n      this.titleQueryResponse = response;\r\n    });\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { SpeechToTextComponent } from './speech-to-text/speech-to-text.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatOptionModule} from '@angular/material/core';\r\nimport {SearchFilter} from './search/search.filter';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SearchComponent,\r\n    SpeechToTextComponent,\r\n    SearchFilter\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatGridListModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,MatOptionModule, MatSelectModule, MatIconModule,\r\n\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent,SearchComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit , ElementRef } from '@angular/core';\r\nimport { AppService } from '../app.service';\r\nimport { VoiceRecognitionService } from '../service/voice-recognition.service'\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { ViewChild } from '@angular/core'\r\n\r\n\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css'],\r\n    providers: [VoiceRecognitionService]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  ing_query: string = '';\r\n  title_query: string = '';\r\n  ing_search: boolean = false;\r\n  ing_loaded: boolean = false;\r\n  loader_spinner: boolean = false;\r\n  lstRecipes: any;\r\n  IngredientsFromDB:any;\r\n  cooking_time_filter:any;\r\n  max_time: number = 1000;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  ingCtrl = new FormControl();\r\n  filteredIngs: Observable<string[]>;\r\n  ingredients: string[] = [];\r\n  allIngredients: string[] = ['Salt', 'Pepper', 'Olive oil', 'sugar', 'onion','butter'];\r\n\r\n  @ViewChild('ingInput') ingInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n\r\n  constructor(private appService: AppService, public service : VoiceRecognitionService){\r\n    this.service.init()\r\n    this.fetchIngredients()\r\n    this.filteredIngs = this.ingCtrl.valueChanges.pipe(\r\n        startWith(null),\r\n        map((ingredient: string | null) => ingredient ? this._filter(ingredient) : this.allIngredients.slice()));\r\n   }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public ingredientSearch(){\r\n    this.lstRecipes = null;\r\n    this.loader_spinner = true;\r\n    this.appService.ingredientSearch(this.ing_query).subscribe((response: any) => {\r\n      this.lstRecipes = response;\r\n      this.loader_spinner = false;\r\n    });\r\n  }\r\n\r\n  public titleSearch(){\r\n    if (this.title_query == '')\r\n      return;\r\n    this.lstRecipes = null;\r\n    this.loader_spinner = true;\r\n    this.appService.titleSearch(this.title_query).subscribe((response: any) => {\r\n      this.lstRecipes = response;\r\n      this.loader_spinner = false;\r\n    });\r\n  }\r\n\r\n  public fetchIngredients(){\r\n    this.appService.fetchIngredients().subscribe((response: any) => {\r\n      this.ingredients = response.json();\r\n      console.log(this.ingredients)\r\n    });\r\n  }\r\n\r\n  public toggle(){\r\n    this.ing_query = '';\r\n    this.title_query = '';\r\n    this.ing_search = !this.ing_search;\r\n    if (this.ing_loaded== false){\r\n      this.fetchIngredients();\r\n      this.ing_loaded=true;\r\n      }}\r\n\r\n  public redirect(url:any){\r\n        window.open(url, \"_blank\");\r\n  }\r\n\r\n  startService(){\r\n    this.service.start();\r\n  }\r\n\r\n  stopService(){\r\n    this.service.stop();\r\n  }\r\n  time_filter(){\r\n    this.max_time = 1000;\r\n    if (this.cooking_time_filter.indexOf('3') > -1) {\r\n      this.max_time = 1000;\r\n    } else if (this.cooking_time_filter.indexOf('2') > -1) {\r\n      this.max_time = 60;\r\n    } else if (this.cooking_time_filter.indexOf('1') > -1) {\r\n      this.max_time = 30;\r\n    }\r\n  }\r\n\r\n\r\n\r\n/// ADD CHIP functionality....\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our ingredient\r\n    if ((value || '').trim()) {\r\n      this.ingredients.push(value.trim());\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.ingCtrl.setValue(null);\r\n  }\r\n\r\n/// REMOVE CHIP functionality....\r\n  remove(ingredient: string): void {\r\n    const index = this.ingredients.indexOf(ingredient);\r\n    if (index >= 0) {\r\n      this.ingredients.splice(index, 1);\r\n    }\r\n  }\r\n\r\n///  MAT AUTOCOMPLETE functionality....\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.ingredients.push(event.option.viewValue);\r\n    this.ingInput.nativeElement.value = '';\r\n    this.ingCtrl.setValue(null);\r\n  }\r\n\r\n///  Filter Ingredients...\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.allIngredients.filter(ingredient => ingredient.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <title>search</title>\r\n</head>\r\n\r\n<body>\r\n  <div id=\"header\">\r\n    <div id=\"topbar\">\r\n      <img id=\"searchbarimage\" src=\"assets/images/RIYF.png\" />\r\n\r\n    <! -- Title Search -->\r\n      <div id=\"searchbar\" type=\"text\" *ngIf=\"!ing_search\">\r\n        <input id=\"searchbartext\" type=\"text\" name=\"titleSearchText\" type=\"text\" placeholder=\"Search recipe...\"\r\n          [(ngModel)]=\"title_query\" value = {{service.text}} #reference />\r\n        <button class=\"cancel\" (click)=\"reference.value=''\">\r\n          <i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\r\n        <div class=\"vertical\"></div>\r\n        <button class=\"mic\" (click)=\"startService()\">\r\n          <i class=\"fa fa-microphone\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <button class=\"search\" (click)=\"titleSearch(); stopService()\" type=\"submit\">\r\n          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </div>\r\n\r\n\r\n   <! -- Ingredient  Search -->\r\n<!--    <div id=\"searchbar\" type=\"text\" *ngIf=\"ing_search\">-->\r\n\r\n<!--      &lt;!&ndash;        <input id=\"searchbartext\" type=\"text\" name=\"ingredientSearchText\" type=\"text\" placeholder=\"Search ingredients...\"&ndash;&gt;-->\r\n<!--      &lt;!&ndash;          [(ngModel)]=\"ing_query\" value = {{service.text}} #reference />&ndash;&gt;-->\r\n\r\n<!--      <mat-form-field class=\"chip-list\" *ngIf=\"ing_search\">-->\r\n<!--        <mat-chip-list #chipList aria-label=\"Ingredient selection\">-->\r\n<!--          <mat-chip-->\r\n<!--            *ngFor=\"let ing of ingredients\"-->\r\n<!--            [selectable]=\"selectable\"-->\r\n<!--            [removable]=\"removable\"-->\r\n<!--            (removed)=\"remove(ing)\">-->\r\n<!--            {{ing}}-->\r\n<!--            <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>-->\r\n<!--          </mat-chip>-->\r\n<!--          <input-->\r\n<!--            #ingInput-->\r\n<!--            [formControl]=\"ingCtrl\"-->\r\n<!--            [matAutocomplete]=\"auto\"-->\r\n<!--            [matChipInputFor]=\"chipList\"-->\r\n<!--            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"-->\r\n<!--            (matChipInputTokenEnd)=\"add($event)\">-->\r\n<!--        </mat-chip-list>-->\r\n<!--        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">-->\r\n<!--          <mat-option *ngFor=\"let ing of filteredIngs | async\" [value]=\"ing\">-->\r\n<!--            {{ing}}-->\r\n<!--          </mat-option>-->\r\n<!--        </mat-autocomplete>-->\r\n<!--      </mat-form-field>-->\r\n<!--      <button class=\"search\" (click)=\"ingredientSearch()\" type=\"submit\">-->\r\n<!--        <i class=\"fa fa-search\" aria-hidden=\"true\"></i>-->\r\n<!--      </button>-->\r\n<!--    </div>-->\r\n\r\n      <div id=\"searchbar\" type=\"text\" *ngIf=\"ing_search\">\r\n        <input id=\"searchbartext\" type=\"text\" name=\"ingredientSearchText\" type=\"text\" placeholder=\"Search ingredients...\"\r\n          [(ngModel)]=\"ing_query\" value = {{service.text}} #reference />\r\n        <button class=\"cancel\" (click)=\"reference.value=''\">\r\n          <i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\r\n        <div class=\"vertical\"></div>\r\n        <button class=\"search\" (click)=\"ingredientSearch();\" type=\"submit\">\r\n          <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"toggle\">\r\n        <mat-slide-toggle (click)=\"toggle()\"></mat-slide-toggle>\r\n      </div>\r\n      <p style=\"font-weight: bold; color: #f8f9fa;\">Ingredient Search</p>\r\n      <div *ngIf=\"lstRecipes?.length > 0\">\r\n        <mat-form-field appearance = \"fill\">\r\n           <mat-select placeholder = \"Select\" (selectionChange)=\"time_filter()\" [(ngModel)]=\"cooking_time_filter\">\r\n            <mat-option value = \"0\">Cooking Time</mat-option>\r\n            <mat-option value = \"1\">~30 min</mat-option>\r\n            <mat-option value = \"2\">~60 min</mat-option>\r\n            <mat-option value = \"3\">60+ min</mat-option>\r\n           </mat-select>\r\n        </mat-form-field>\r\n     </div>\r\n    </div>\r\n\r\n     <! -- Results section -->\r\n    <div id=\"results\">\r\n      <div class=\"spinner-border text-warning mar-left-50\" role=\"status\" *ngIf=\"loader_spinner\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n      <mat-grid-list cols=\"4\" rowHeight=\"200px\" gutterSize=50px>\r\n        <mat-grid-tile *ngFor=\"let recipe of lstRecipes | recipeFilter: max_time\" [colspan]=\"1\" [rowspan]=\"1\"\r\n          [style.backgroundImage]=\"'url('+ recipe.photo_url +')'\" (click)=\"redirect(recipe.recipe_url)\" class=\"tile\">\r\n          <div class=\"tile_content\">\r\n            <img src=\"{{recipe.photo_url}}\" alt=\"Avatar\" class=\"image\">\r\n            <div class=\"overlay\">\r\n              <span>\r\n                {{recipe.title}}\r\n              </span>\r\n              <div class=\"recipedetails\">\r\n                <span *ngIf=\"recipe.cooking_time\"><i class=\"fa fa-clock-o\"></i>{{recipe.cooking_time}} <label style=\"font-size: 10px;\">m</label></span>\r\n                <span *ngIf=\"recipe.serving_size\"><i class=\"fa fa-coffee\"></i>{{recipe.serving_size}}</span>\r\n                <span *ngIf=\"recipe.cuisine\"><i class=\"fa fa-pie-chart\"></i>{{recipe.cuisine | titlecase }}</span>\r\n                <span *ngIf=\"recipe.difficulty_level\"><i class=\"fa fa-gears\"></i>{{recipe.difficulty_level | titlecase }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</body>\r\n\r\n</html>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\n\r\nconst routes: Routes = [\r\n{ path: '', redirectTo: '/search', pathMatch: 'full' },\r\n  { path: 'search', component: SearchComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\n\n\ndeclare var webkitSpeechRecognition: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoiceRecognitionService {\n\n recognition =  new webkitSpeechRecognition();\n  isStoppedSpeechRecog = false;\n  public text = '';\n  tempWords;\n\n  constructor() { }\n\n  init() {\n\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n\n    this.recognition.addEventListener('result', (e) => {\n      const transcript = Array.from(e.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join('');\n      this.tempWords = transcript;\n      console.log(transcript);\n    });\n  }\n\n  start() {\n    this.isStoppedSpeechRecog = false;\n    this.recognition.start();\n    console.log(\"Speech recognition started\")\n    this.recognition.addEventListener('end', (condition) => {\n      if (this.isStoppedSpeechRecog) {\n        this.recognition.stop();\n        console.log(\"End speech recognition\")\n      } else {\n        this.wordConcat()\n        this.recognition.start();\n      }\n    });\n  }\n  stop() {\n    this.isStoppedSpeechRecog = true;\n    this.wordConcat()\n    this.recognition.stop();\n    console.log(\"End speech recognition\")\n  }\n\n  wordConcat() {\n    this.text = this.text + ' ' + this.tempWords + '.';\n    this.tempWords = '';\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}